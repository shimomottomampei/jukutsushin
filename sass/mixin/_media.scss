//使い方
//@include mediaQuery-up(sm)

$bp-smartphone-portrait: 480px; //sm
$bp-tablet-portrait: 768px; //tb
$bp-laptop_s: 1000px;
$bp-tablet-landscape: 1024px; //md
$bp-laptop_m: 1366px; //lg
$bp-laptop_l: 1920px; //xl


$breakpoints:(
  sm: $bp-smartphone-portrait,
  tb: $bp-tablet-portrait,
  md: $bp-tablet-landscape,
  lg: $bp-laptop_m,
  xl: $bp-laptop_l
) !default;


@mixin mediaQuery-up($breakpoint) {
  @media ( min-width: #{map-get($breakpoints, $breakpoint)} ) {
    @content;
  }
}

@mixin mediaQuery-down($breakpoint) {
  @media ( max-width: #{map-get($breakpoints, $breakpoint)} ) {
    @content;
  }
}

@mixin mediaup($breakpoint) {
  @media ( min-width: #{map-get($breakpoints, $breakpoint)} ) {
    @content;
  }
}

@mixin mediadown($breakpoint) {
  @media ( max-width: #{map-get($breakpoints, $breakpoint)} ) {
    @content;
  }
}

@mixin media($breakpoint) {
  @media ( max-width: #{map-get($breakpoints, $breakpoint)} ) {
    @content;
  }
}


//使い方
//@include mediaQuery-down(sm, lg)

@mixin mediaQuery-between($breakpoint1, $breakpoint2) {
  $size1: null;
  $size2: null;
  @each $bp, $size in $breakpoints{
    @if ( $bp == $breakpoint1 ){
      $size1: $size;
    }
    @if ( $bp == $breakpoint2 ){
      $size2: $size;
    }
  }

  @if ( $size1 <= $size2 ) {
    @media ( min-width: #{map-get($breakpoints, $breakpoint1)} ) and ( max-width: #{map-get($breakpoints, $breakpoint2)} ) {
      @content;
    }
  } @else {
    @media ( min-width: #{map-get($breakpoints, $breakpoint2)} ) and ( max-width: #{map-get($breakpoints, $breakpoint1)} ) {
      @content;
    }
  }

}